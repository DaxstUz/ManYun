package com.ch.mhy.activity.comment;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnFocusChangeListener;
import android.view.inputmethod.InputMethodManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.ch.comm.resquest.AbsResponseData;
import com.ch.mhy.R;
import com.ch.mhy.activity.my.LoginActivity;
import com.ch.mhy.adapter.CommentAdapter;
import com.ch.mhy.entity.CommentInfo;
import com.ch.mhy.util.UserUtil;

/**
 * 漫画评论
 * @author xc.li
 * @date 2015-10-14
 */
public class CommentActivity extends Activity implements OnClickListener {
	private Context context;
	/**
	 * 评论列表
	 */
	private ListView comment_list;
	/**
	 * 评论数据
	 */
	private List<CommentInfo> dataList;
	/**
	 * 评论列表适配器
	 */
	private CommentAdapter adapter;
	/**
	 * 发表评论输入框
	 */
	private EditText commentContent;
	/**
	 * 总评论数展示
	 */
	private TextView comment_cnt;
	/**
	 * 漫画Id
	 */
	private String bigbookId = "0";
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		this.setContentView(R.layout.activity_comment);
		context = this;
		
		LinearLayout root_view = (LinearLayout)this.findViewById(R.id.root_view);
		root_view.setOnClickListener(this);
		//获取漫画ID
		bigbookId = this.getIntent().getExtras().getString("bigbookId");
		System.out.println("漫画ID="+bigbookId);
		System.out.println("userID="+UserUtil.getOpenId(context)+";userName="+UserUtil.getScreen_name(context)
				+ ";userType="+UserUtil.getPlatForm(context)+";imgUrl="+UserUtil.getHeadurl(context));
		initBtn();
		initCommentCnt();
		initListView();
		
		InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
		imm.hideSoftInputFromWindow(root_view.getWindowToken(), 0);
	}
	
	private void initCommentCnt() {
		// 查询漫画评论总数
		CommentDataUtil.loadCommentCnt(this, bigbookId, new AbsResponseData(null) {
			@Override
			public void dataBusi(Object data) {
				if(data != null){
					TextView comment_cnt = (TextView) CommentActivity.this.findViewById(R.id.comment_cnt);
					comment_cnt.setText("评论 (" + data.toString() + ")");
				}
			}

		});
	}
	/**
	 * 初始化评论数据列表
	 */
	private void initListView(){
		dataList = new ArrayList<CommentInfo>();
		adapter = new CommentAdapter(this, dataList);
		comment_list = (ListView)this.findViewById(R.id.comment_list);
		comment_list.setAdapter(adapter);
		
		CommentDataUtil.loadCommentList(context, bigbookId, new ResponseData(1, CommentInfo.class));
	}
	/**
	 * 初始化发表评论按钮及事件
	 */
	private void initBtn(){
		commentContent = (EditText)this.findViewById(R.id.commentContent);
		//点击输入框事件
		commentContent.setOnFocusChangeListener(new OnFocusChangeListener() {
			@Override
			public void onFocusChange(View v, boolean hasFocus) {
				if(!UserUtil.isLogin(context) && commentContent.isFocused()){//未登录，跳转到登录界面
					Toast.makeText(context, "亲，您还未登录哦，请先登录吧~#~", Toast.LENGTH_LONG).show();
					commentContent.setFocusable(false);
					Intent  intent=new Intent(context, LoginActivity.class);
					startActivity(intent);
					commentContent.setFocusable(true);
					commentContent.setFocusableInTouchMode(true);
				}
			}
		});
		
		
		comment_cnt = (TextView)this.findViewById(R.id.comment_cnt);
		Button commentBtn = (Button)this.findViewById(R.id.commentBtn);
		commentBtn.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				String value = commentContent.getText().toString();
				if(value != null && value.length()>0){
					final CommentInfo info = new CommentInfo();
					info.setBigbookId(Integer.valueOf(bigbookId));
					info.setTopic(value);
					info.setNickname(UserUtil.getScreen_name(context));
					info.setImgUrl(UserUtil.getHeadurl(context));
					info.setUserId(UserUtil.getOpenId(context));
					info.setUserType(UserUtil.getPlatForm(context));
					info.setCreateTime(System.currentTimeMillis());
					info.setUserOkCnt(0);
					info.setUserMsgCnt(0);
					info.setIsGiveMeFine(0);
					
					//保存评论
					CommentDataUtil.saveComment(context, info, new AbsResponseData(null){
						@Override
						public void dataBusi(Object data) {
							info.setId(Long.valueOf(data.toString()));
							dataList.add(info);
							adapter.notifyDataSetChanged();
						}
					});
					
					commentContent.setText("");
					//隐藏输入键盘
					InputMethodManager imm = (InputMethodManager)  
						getSystemService(Context.INPUT_METHOD_SERVICE);  
					imm.hideSoftInputFromWindow(v.getWindowToken(), 0); 
					//更新评论总数
					String ccCnt = (String)comment_cnt.getText();
					comment_cnt.setText("评论"+(Integer.valueOf(ccCnt.replace("评论", ""))+1));
				}else{
					Toast.makeText(context, "亲，请先输入您要说的话哦！", Toast.LENGTH_SHORT).show();
				}
			}
		});
	}

	@Override
	public void onClick(View v) {
		if (v.getId() != R.id.commentContent) {//点击隐藏输入键盘
			InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
			imm.hideSoftInputFromWindow(v.getWindowToken(), 0);
		}
	}
	/**
	 * 点击返回
	 * @param view
	 */
	public void onclick(View view){
		CommentActivity.this.finish();
	}
	/**
	 * type: 
	 * 1-评论列表数据；
	 * 数据处理回调
	 */
	class ResponseData extends AbsResponseData{
		private int type;
		public ResponseData(int type, Class<?> clz) {
			super(clz);
			this.type = type;
		}

		@SuppressWarnings("unchecked")
		@Override
		public void dataBusi(Object data) {
			switch (type) {
			case 1:
				dataList.addAll((List<CommentInfo>)data);
				adapter.notifyDataSetChanged();
				break;
			case 2:
				
				break;
			default:
				break;
			}
		}
	}
	
}
