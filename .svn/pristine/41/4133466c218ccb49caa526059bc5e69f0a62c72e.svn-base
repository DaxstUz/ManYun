package com.ch.mhy.adapter;

import java.util.HashMap;
import java.util.List;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.Intent;
import android.text.Html;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.ch.comm.resquest.AbsResponseData;
import com.ch.mhy.R;
import com.ch.mhy.activity.comment.CommentDataUtil;
import com.ch.mhy.activity.comment.CommentDetailActivity;
import com.ch.mhy.activity.my.LoginActivity;
import com.ch.mhy.entity.CommentInfo;
import com.ch.mhy.util.UserUtil;
import com.ch.mhy.util.Utils;
import com.nostra13.universalimageloader.core.ImageLoader;

public class CommentAdapter extends BaseAdapter {
	private List<CommentInfo> dataList;
	private Context context;
	private LayoutInflater inflater;
	 
	public CommentAdapter(Context context, List<CommentInfo> dataList){
		this.context = context;
		this.dataList = dataList;
		this.inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
	}
	
	@Override
	public int getCount() {
		return dataList.size();
	}

	@Override
	public Object getItem(int position) {
		return dataList.get(position);
	}

	@Override
	public long getItemId(int position) {
		return 0;
	}

	@SuppressLint({ "ViewHolder", "SimpleDateFormat" })
	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		convertView = inflater.inflate(R.layout.comment_item, null, false);
		final CommentInfo bean = dataList.get(position);
		ImageView user_head = (ImageView)convertView.findViewById(R.id.user_head);
		TextView user_name = (TextView)convertView.findViewById(R.id.user_name);
		TextView user_date = (TextView)convertView.findViewById(R.id.user_date);
		TextView user_comment = (TextView)convertView.findViewById(R.id.user_comment);
		ImageView user_ok_img = (ImageView)convertView.findViewById(R.id.user_ok_img);
		final TextView user_ok_cnt = (TextView)convertView.findViewById(R.id.user_ok_cnt);
		final TextView user_msg_cnt = (TextView)convertView.findViewById(R.id.user_msg_cnt);
		
		String headUrl = bean.getImgUrl();
		ImageLoader.getInstance().displayImage(headUrl, user_head, Utils.adapterOpt);
		user_name.setText(Html.fromHtml("<B>"+bean.getNickname()+"</B>"));
		user_date.setText(bean.getCommentTime());
		user_comment.setText(bean.getTopic());
		
		//String isGiveMeFine = bean.getString("isGiveMeFine");
		/*user_ok_cnt.setText(bean.getString("userOkCnt"));
		user_msg_cnt.setText(bean.getString("userMsgCnt"));
		if("1".equals(isGiveMeFine)){
			user_ok_img.setImageResource(R.drawable.ok_hand_red);
		}*/
		CommentDataUtil.loadOkCommentCnt(context, bean.getId(), new AbsResponseData(null) {
			@Override
			public void dataBusi(Object data) {
				user_ok_cnt.setText(data.toString());
				bean.setUserOkCnt(0);
			}
		});
		
		CommentDataUtil.isOkComment(context, bean, new AbsResponseData(null) {
			@Override
			public void dataBusi(Object data) {
				System.out.println(data.toString());
			}
		});
		
		CommentDataUtil.loadCommentReplyCnt(context, bean.getId(), new AbsResponseData(null) {
			@Override
			public void dataBusi(Object data) {
				user_msg_cnt.setText(data.toString());
				bean.setUserMsgCnt(0);
			}
		});
		
		LinearLayout comment_layout = (LinearLayout)convertView.findViewById(R.id.comment_layout);
		LinearLayout ok_img_layout = (LinearLayout)convertView.findViewById(R.id.ok_img_layout);
		LinearLayout user_msg_layout = (LinearLayout)convertView.findViewById(R.id.user_msg_layout);
		
		comment_layout.setOnClickListener(new CommentClick(1, bean));
		ok_img_layout.setOnClickListener(new OkClick(bean, user_ok_img));
		user_msg_layout.setOnClickListener(new CommentClick(1, bean));
		
		return convertView;
	}

	/**
	 * 
	 * @author xc.li
	 * @date 2015-10-12
	 */
	class CommentClick implements OnClickListener{
		private int type;
		private CommentInfo bean;
		public CommentClick(int type, CommentInfo bean){
			this.type = type;
			this.bean = bean;
		}
		@Override
		public void onClick(View v) {
			if(type == 1){//进入评论详情
				Intent intent = new Intent();
				intent.setClass(context, CommentDetailActivity.class);
				intent.putExtra("comment", bean);
				context.startActivity(intent);
			}
		}
		
	}
	
	class OkClick implements OnClickListener{
		private CommentInfo bean;
		private ImageView user_ok_img;
		public OkClick(CommentInfo bean, ImageView user_ok_img){
			this.bean = bean;
			this.user_ok_img = user_ok_img;
		}
		@Override
		public void onClick(View v) {//点赞操作
			if(UserUtil.isLogin(context)){//已登录
				int isGiveMeFine = bean.getIsGiveMeFine();
				LinearLayout pll = (LinearLayout)user_ok_img.getParent();
				TextView user_ok_cnt = (TextView)pll.getChildAt(1);
				String okCnt = (String)user_ok_cnt.getText();
				if(1 == isGiveMeFine){//删除点赞记录
					bean.setIsGiveMeFine(0);
					user_ok_img.setImageResource(R.drawable.ok_hand_gray);
					user_ok_cnt.setText((Integer.valueOf(okCnt)-1)+"");
					long topicId = bean.getId();
					CommentDataUtil.delOkComment(context, topicId, new AbsResponseData(null){
						@Override
						public void dataBusi(Object data) {
							
						}
					});
				}else{//增加点赞记录
					bean.setIsGiveMeFine(1);
					user_ok_img.setImageResource(R.drawable.ok_hand_red);
					user_ok_cnt.setText((Integer.valueOf(okCnt)+1)+"");
					
					HashMap<String, Object> params = new HashMap<String, Object>();
					CommentDataUtil.saveOkComment(context, params, new AbsResponseData(null){
						@Override
						public void dataBusi(Object data) {
							
						}
					});
				}
			}else{//未登录，跳转到登录界面
				Intent  intent=new Intent(context, LoginActivity.class);
				context.startActivity(intent);
			}
		}
		
	}
}
